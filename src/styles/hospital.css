 small{
  color: #ffffff;
}
/* styles.css */

.dark-blue-button {
  display: inline-block;
  padding: 12px 24px;
  background-color: #1a237e;
  color: #ffffff;
  text-decoration: none;
  border-radius: 4px;
  font-size: 16px;
  font-weight: bold;
  margin: 30px;
}

.dark-blue-button:hover {
  background-color: #0d1c61;
}

p{
      font-size:0.9em;
      line-height: 23px;
      font-weight: 300;
      justify-content: center ;
}

h1{
  margin:0;
}
.skewed {
  width: 45em;
  color: #ffffff;
  display: flex;
  background: #0095ff;

  margin: 2em 0;
  box-shadow: 0 0 15px rgba(0,0,0,7); 
}
.text{
  padding: 1.5em;
  width:50%;
  display:flex;
  justify-content: space-evenly;
  align-items: flex-start;
  flex-direction: column;

}

a{
  color: #fff;
  text-decoration: none;

}
.image{
  width: 50%;
  height: 17em;
  position: relative;
  overflow: hidden;

}
.image::before{
  content:'';
  position:absolute;
  left:-6.1em;
  top:50%;
  transform: 
  translateY(-50%) rotate(20deg);
  background:#0095ff;
  width:40%;
  height: 140%;
  box-shadow: 0 0 20px rgba(0, 0, 0, 7);
}

.skewed-left .image::before {
  transform:
  translateY(-50%) rotate(-20deg);
  left: initial;
  right:-6.1em;
}
  
img{
  width: 140%;
}

@media screen and (max-width:750px){
  .skewed{
      display: block;
      width:20em;

  }
  .image, .text {
      width:100%;
  }
  img{
      width:160%;
  }
  .skewed .image::before{
      width:120%;
      height:40%;
      top:-5em;
      left:50%;
      transform: 
      translate(-50%) rotate(10deg);
  }
  .skewed-left .image::before {
      transform: translateX(-50%) rotate(-10deg);
      top:initial;
      bottom: -5em;
  }
}

.container1 {
  background-color: white;
  max-width: 1140px;
  margin: auto;
  padding: 0px 15px;
}





/* Map styles */
.map {
  --d: 150px; /* Set the desired size for each node (increased from 80px to 100px) */
  --node-count: 7; /* Set the total number of nodes, including the core node */
  --r: 200px; /* Set the desired distance from the core node */
  --s: calc(2 * var(--r) + var(--d)); /* container size */
  position: relative;
  width: var(--s);
  height: var(--s);
  display: flex;
  justify-content: center;
  align-items: center;
}

.map .node {
  position: absolute;
  top: 50%;
  left: 50%;
  display: flex; /* Add display: flex to center the content horizontally and vertically */
  justify-content: center; /* Center content horizontally */
  align-items: center; /* Center content vertically */
  margin: calc(-0.5 * var(--d));
  width: var(--d);
  height: var(--d);
  --az: calc(var(--i) * 1turn / var(--node-count));
  transform: rotate(var(--az)) translate(var(--r)) rotate(calc(-1 * var(--az)));
  background: rgb(64, 0, 255);
  border-radius: 50%;
  color: white; /* Set text color to white */
  font-size: 16px; /* Adjust font size as needed */
  text-align: center; /* Center the text within the node */
}

.map .node.core {
  --d: 200px; /* Set the size of the core node */
  background: rgb(6, 161, 218);
  display: flex; /* Center the content horizontally and vertically */
  justify-content: center; /* Center content horizontally */
  align-items: center; /* Center content vertically */
  width: var(--d);
  height: var(--d);
  color: white; /* Set text color to white */
  font-size: 16px; /* Adjust font size as needed */
  text-align: center; /* Center the text within the core node */
}

/* Media query for mobile devices */
@media (max-width: 767px) {
  .skew .skew-content {
    font-size: 1.2rem; /* Decrease the font size for mobile devices */
  }

  .map .node {
    --d: 80px; /* Decrease the size of each node for mobile devices */
    --r: 150px;
    font-size: 14px; /* Decrease the font size for the text inside the nodes for mobile devices */
  }

  .map .node.core {
    --d: 120px; /* Decrease the size of the core node for mobile devices */
    font-size: 16px; /* Adjust the font size for the text inside the core node for mobile devices */
  }

  .container1 {
    padding: 0px 10px; /* Adjust the container padding for mobile devices */
  }
}
